# Generated by Django 4.2 on 2023-04-14 16:03

from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ('api', '0002_test'),
    ]

    operations = [
        migrations.CreateModel(
            name='CruxClimbingspot',
            fields=[
                ('spotid', models.PositiveIntegerField(db_column='SpotID', primary_key=True, serialize=False)),
                ('spotname', models.CharField(db_column='SpotName', max_length=30)),
                ('spotaddress', models.CharField(blank=True, db_column='SpotAddress', max_length=100, null=True)),
            ],
            options={
                'db_table': 'CRUX_Climbingspot',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='CruxQuestion',
            fields=[
                ('questionid', models.PositiveIntegerField(db_column='QuestionID', primary_key=True, serialize=False)),
                ('difficulty', models.IntegerField(db_column='Difficulty')),
                ('questionimage', models.CharField(blank=True, db_column='QuestionImage', max_length=50, null=True)),
            ],
            options={
                'db_table': 'CRUX_Question',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='CruxSector',
            fields=[
                ('sectornum', models.PositiveIntegerField(db_column='SectorNum', primary_key=True, serialize=False)),
                ('sectorimage', models.CharField(blank=True, db_column='SectorImage', max_length=50, null=True)),
            ],
            options={
                'db_table': 'CRUX_Sector',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='CruxUser',
            fields=[
                ('memberid', models.CharField(db_column='MemberID', max_length=12, primary_key=True, serialize=False)),
                ('memberpw', models.CharField(db_column='MemberPW', max_length=20)),
                ('membernickname', models.CharField(db_column='MemberNickname', max_length=20)),
                ('memberprofilepic', models.CharField(blank=True, db_column='MemberProfilePic', max_length=50, null=True)),
                ('memberprofileintro', models.TextField(blank=True, db_column='MemberProfileIntro', null=True)),
                ('memberprofilerecentque', models.TextField(blank=True, db_column='MemberProfileRecentQue', null=True)),
            ],
            options={
                'db_table': 'CRUX_User',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='CruxVideo',
            fields=[
                ('videoid', models.PositiveIntegerField(db_column='VideoID', primary_key=True, serialize=False)),
                ('uploaddate', models.DateField(db_column='UploadDate')),
                ('videourl', models.CharField(db_column='VideoURL', max_length=50)),
            ],
            options={
                'db_table': 'CRUX_Video',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='ForumPosts',
            fields=[
                ('postsid', models.IntegerField(db_column='PostsID', primary_key=True, serialize=False)),
                ('postwritememid', models.CharField(db_column='PostWriteMemID', max_length=12)),
                ('writedate', models.DateField(db_column='WriteDate')),
                ('posttitle', models.TextField(db_column='PostTitle')),
                ('postcontent', models.TextField(db_column='PostContent')),
                ('region', models.CharField(blank=True, db_column='Region', max_length=20, null=True)),
            ],
            options={
                'db_table': 'Forum_Posts',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='ForumRelpy',
            fields=[
                ('replyid', models.PositiveIntegerField(db_column='ReplyID', primary_key=True, serialize=False)),
                ('writterid', models.CharField(db_column='WritterID', max_length=12)),
                ('replycontent', models.TextField(db_column='ReplyContent')),
                ('replydate', models.DateField(db_column='ReplyDate')),
            ],
            options={
                'db_table': 'Forum_Relpy',
                'managed': False,
            },
        ),
    ]
